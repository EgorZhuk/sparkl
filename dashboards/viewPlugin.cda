<?xml version="1.0" encoding="UTF-8"?>
<CDADescriptor>
   <DataSources>
      <Connection id="packPluginQuery" type="kettle.TransFromFile">
         <KtrFile>system/cpk/endpoints/kettle/packPlugin.kjb</KtrFile>
         <variables datarow-name="destination" variable-name="destination"/>
         <variables datarow-name="download" variable-name="download"/>
         <variables datarow-name="plugin_id" variable-name="plugin_id"/>
      </Connection>
      <Connection id="listDashboardsQuery" type="kettle.TransFromFile">
         <KtrFile>../endpoints/kettle/listDashboards.ktr</KtrFile>
      </Connection>
      <Connection id="metadataQuery" type="scripting.scripting">
         <Initscript></Initscript>
         <Language>beanshell</Language>
      </Connection>
      <Connection id="elementsTableQuery" type="scripting.scripting">
         <Initscript></Initscript>
         <Language>beanshell</Language>
      </Connection>
   </DataSources>
   <DataAccess access="public" cache="true" cacheDuration="3600" connection="packPluginQuery"
               id="packPluginQuery"
               type="kettle">
      <Columns/>
      <Parameters>
         <Parameter default="" name="destination" type="String"/>
         <Parameter default="false" name="download" type="String"/>
         <Parameter default="" name="plugin_id" type="String"/>
      </Parameters>
      <Query></Query>
   </DataAccess>
   <DataAccess access="public" cache="true" cacheDuration="3600"
               connection="listDashboardsQuery"
               id="listDashboardsQuery"
               type="kettle">
      <Columns/>
      <Parameters/>
      <Query>OUTPUT</Query>
   </DataAccess>
   <DataAccess access="public" cache="true" cacheDuration="3600" connection="metadataQuery"
               id="metadataQuery"
               type="scriptable">
      <Columns/>
      <Parameters/>
      <Query>import org.pentaho.reporting.engine.classic.core.util.TypedTableModel;

String[] columnNames = new String[]{
"Property",
"Value"
};


Class[] columnTypes = new Class[]{
String.class
,String.class
};

TypedTableModel model = new TypedTableModel(columnNames, columnTypes);
model.addRow(new Object[]{ new String("Name:")
, new String("Name")
});

model.addRow(new Object[]{ new String("Description:")
, new String("Description")
});

model.addRow(new Object[]{ new String("Author Name:")
, new String("Author Name")
});

model.addRow(new Object[]{ new String("Author Email:")
, new String("Author email")
});

model.addRow(new Object[]{ new String("Company Name:")
, new String("Company Name")
});

model.addRow(new Object[]{ new String("Company URL:")
, new String("Company URL")
});

model.addRow(new Object[]{ new String("Creation Date:")
, new String("Creation Date")
});

model.addRow(new Object[]{ new String("Version:")
, new String("Version")
});

model.addRow(new Object[]{ new String("CPK Version:")
, new String("CPK Version")
});

return model;</Query>
   </DataAccess>
   <DataAccess access="public" cache="true" cacheDuration="3600"
               connection="elementsTableQuery"
               id="elementsTableQuery"
               type="scriptable">
      <Columns/>
      <Output indexes="1,2,3,4,0" mode="include"/>
      <Parameters/>
      <Query>import org.pentaho.reporting.engine.classic.core.util.TypedTableModel;

String[] columnNames = new String[]{
"ID",
"Name",
"Type",
"location",
"Admin"
};


Class[] columnTypes = new Class[]{
String.class
,String.class
,String.class
,String.class
,String.class
};

TypedTableModel model = new TypedTableModel(columnNames, columnTypes);
model.addRow(new Object[]{ new String("dashboard1_Id")
, new String("dashboard1_name") , new String("dashboard") , new String("/dashboards/dashboard1_name.wcdf") , new String("false")});

model.addRow(new Object[]{ new String("endpoint1_Id")
, new String("endpoint1_name") , new String("Kettle") , new String("/endpoints/kettle/endpoint1_name.ktr") , new String("false")});
model.addRow(new Object[]{ new String("dashboard2_Id")
, new String("dashboard2_name") , new String("dashboard") , new String("/dashboards/dashboard2_name.wcdf") , new String("true")});
model.addRow(new Object[]{ new String("dashboard3_Id")
, new String("dashboard3_name") , new String("dashboard") , new String("/dashboards/dashboard3_name.wcdf") , new String("false")});
model.addRow(new Object[]{ new String("dashboard4_Id")
, new String("dashboard4_name") , new String("dashboard") , new String("/dashboards/dashboard4_name.wcdf") , new String("false")});
return model;</Query>
   </DataAccess>
</CDADescriptor>